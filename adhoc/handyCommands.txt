#pulling out regions from a kgg file:
grep $'\t3' firstThreeComponents_K_G4.kgg | perl -pe '@_ = split(/\t/); @_ = split(/[:\-_]/, $_[0]); $" = "\t"; $_ = "@_[0,1,2]\n"' > threeCompFourCluster3.bed

#changing the window around chr:start-end coordinates:
cat activations_validbest_00-11_test_featuresExtracted_one_hot_noN_extraColAdded_500K_regionsExtracted_150bp_randomSegments_K_G10.kgg | perl -pe '@_ = split(/[:\-\t]/, $_); $_ = "$_[0]:".($_[1]-75)."-".($_[2]+75)."\n"' > 300bpCoordinates_randGen_clusteringOrder.txt

#reorder the lines in a file according to an ordering in another file (title assumed present):
join.py --file2 myKgg.kgg --file1 featuresExtracted_seqLen150_dinucs_AA_TT_TA_extraColAdded_100K_hg19_300bp_randomSegments.bed  --file1KeyIdxs 0 --file2KeyIdxs 0 --file1SelectedColumns --file2SelectedColumns --file1_invertColumnSelection --titlePresent --progressUpdate 10000 --outputFile dinucProfile_AA_TT_AT.txt

#add in a header:
perl -i -pe '$_ = $. == 1 ? "id\tstate\tCTCF\n$_" : $_'

#strip .0 from floats to make them ints for fast casting
zcat asdfd.txt.gz | perl -pe '$_ =~ s/\.0//g' > asdfd.txt

#count the occurrences of a value in second column
awk ' BEGIN { print "Category   Counts"} {{ cats[$2] = cats[$2] + 1 }} END { for(c in cats) { print c, "=", cats[c]} } ' inputFile

#perform some kind of filtering based on a certain subset of columns and print only those columns; in this case, only outputs those regions
#that have a '1' in at least one of the column specified in @tiss
perl -F"\t" -ape 'BEGIN {@tiss = ("E003","E116"); use List::Util qw(sum); $" = "\t"}; if ($.==1) {%titToIdx = (map {$F[$_]=>$_} 0..$#F); @tissIdxs = map {$titToIdx{$_}} @tiss}; @toSum = map {$F[$_]} @tissIdxs; if ($. == 1 || sum(@toSum)>0) {@toPrint = ($F[0],@toSum); $_ = "@toPrint\n";} else {$_ = ""}' p2_multiLabelInfo.tsv > p2_multilabelInfo_activeInH1orGM.tsv
